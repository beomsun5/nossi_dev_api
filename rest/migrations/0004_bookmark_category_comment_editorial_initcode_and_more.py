# Generated by Django 4.2.14 on 2024-08-03 14:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rest', '0003_alter_user_rt_expire'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InitCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_code', models.TextField(blank=True, null=True)),
                ('run_code', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_type', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='No Title', max_length=255, unique=True)),
                ('categories', models.TextField()),
                ('level', models.PositiveSmallIntegerField(default=1)),
                ('attempt_number', models.BigIntegerField(default=0)),
                ('solve_number', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', models.TextField(blank=True, null=True)),
                ('view_count', models.IntegerField(default=0)),
                ('title', models.CharField(default='No Title', max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_solved', models.BooleanField(default=False)),
                ('last_attempt_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='rest_user_email_0752be_idx'),
        ),
        migrations.CreateModel(
            name='ProblemMeta',
            fields=[
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='rest.problem')),
                ('description', models.TextField(blank=True, default='No Contents', null=True)),
                ('constraints', models.TextField(blank=True, default='No Constraints', null=True)),
                ('ex_in', models.TextField(blank=True, max_length=255, null=True)),
                ('ex_out', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='submission',
            name='problem_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest.problem'),
        ),
        migrations.AddField(
            model_name='submission',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='solution',
            name='problem_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest.problem'),
        ),
        migrations.AddField(
            model_name='solution',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='problem',
            name='editorial_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rest.editorial'),
        ),
        migrations.AddField(
            model_name='like',
            name='problem_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest.problem'),
        ),
        migrations.AddField(
            model_name='like',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='initcode',
            name='language_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest.language'),
        ),
        migrations.AddField(
            model_name='initcode',
            name='problem_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest.problem'),
        ),
        migrations.AddField(
            model_name='comment',
            name='editorial_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rest.editorial'),
        ),
        migrations.AddField(
            model_name='comment',
            name='solution_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rest.solution'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='problem_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest.problem'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SubmissionDetail',
            fields=[
                ('submission_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='rest.submission')),
                ('passed_num', models.IntegerField(default=0)),
                ('total_num', models.IntegerField(default=0)),
                ('cpu_time', models.TextField()),
                ('run_time', models.TextField()),
                ('memory', models.TextField()),
                ('submission_result', models.TextField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_code', models.TextField(blank=True, null=True)),
                ('language_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest.language')),
            ],
        ),
        migrations.AddIndex(
            model_name='submission',
            index=models.Index(fields=['user_id', 'problem_id'], name='rest_submis_user_id_818857_idx'),
        ),
        migrations.AddIndex(
            model_name='submission',
            index=models.Index(fields=['-last_attempt_at'], name='rest_submis_last_at_416a45_idx'),
        ),
        migrations.AddIndex(
            model_name='problem',
            index=models.Index(fields=['-updated_at'], name='rest_proble_updated_ecf5be_idx'),
        ),
        migrations.AddIndex(
            model_name='initcode',
            index=models.Index(fields=['problem_id', 'language_id'], name='rest_initco_problem_56ba61_idx'),
        ),
        migrations.AddIndex(
            model_name='submissiondetail',
            index=models.Index(fields=['-submitted_at'], name='rest_submis_submitt_9fdb3a_idx'),
        ),
    ]
